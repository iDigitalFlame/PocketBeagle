#!/bin/bash
# Automatically generated build files script.
# Args: build-config.py Config config.sh

mkdir -p "${ROOT}${SYSCONFIG_DIR}/bin" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/iptables" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/profile.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/security/limits.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/ssh" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/systemd" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/ldconfig.service.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc" 2> /dev/null

# Create file "/bin/relink"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '#!/usr/bin/bash\n\nDEBUG=0\n\nif [ $# -ne 2 ]; then\n    echo "relink <config so' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'urce> <config target> [debug]"\n    exit 1\nfi\n\nif [ $# -eq 3 ]; then\n    DEB' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'UG=1\nfi\n\nlist() {\n    if [ $# -ne 2 ]; then\n        return 1\n    fi\n    f' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'c=${1%%/}\n    ft=${2%%/}\n    for file in $(find "$fc" -type f -print); do\n   ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '     fp=$(printf "$file" | awk "{gsub(\\"${fc}\\", \\"\\"); print \\$1}")\n     ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '   if ! [ -z $(echo $fp | grep -vE '\''.(nlk|nolink)$|^/.git(|ignore$|config$)|^' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '/(LICENSE|license|.vscode)$|^/[a-zA-Z0-9_.-]+.(md|vscode|MD|code-workspace)$'\''' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ') ]; then\n            check "$ft$fp" "$fc$fp"\n        fi\n    done\n    return' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ' 0\n}\n\nlink() {\n    if [ $# -ne 2 ]; then\n        return 1\n    fi\n    rm -' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'f "$1" 2> /dev/null\n    fd=$(dirname "$1")\n    if ! [ -d "$fd" ]; then\n      ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '  echo "Making \\"$fd\\".."\n        mkdir -p "$fd" 2> /dev/null\n        if [ $' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '? -ne 0 ]; then\n            panic "Cannot create directory \\"$fd\\"!"\n       ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ' fi\n        if [ $UID -eq 0 ]; then\n            chmod 555 "$fd"\n        else\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '            chmod 755 "$fd"\n        fi\n    fi\n    ln -s "$2" "$1"\n    if [ $' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '? -ne 0 ]; then\n        panic "Could not link \\"$1\\" to \\"$2\\"!"\n    fi\n ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '   echo "[+] Relinked \\"$1\\" to \\"$2\\"."\n    return 0\n}\n\ncheck() {\n    ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'if [ $# -ne 2 ]; then\n        return 1\n    fi\n    if [ $DEBUG -eq 1 ]; then\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '        echo "[+] Checking \\"$1\\".."\n    fi\n    if ! [ -L "$1" ]; then\n    ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '    echo "File \\"$1\\" is invalid, updating!"\n        link "$1" "$2"\n    else' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '\n        fl=$(ls -al "$1" | awk '\''{print $11}'\'')\n        if ! [[ "$fl" == ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '"$2" ]]; then\n            echo "File \\"$1\\" is invalid, updating!"\n         ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '   link "$1" "$2"\n        else\n            if [ $DEBUG -eq 1 ]; then\n        ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '        echo "File \\"$1\\" is valid!"\n            fi\n        fi\n    fi\n    ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'return 0\n}\n\npanic() {\n    echo "[!] $1"\n    exit 1\n}\n\nif ! [ -d "$1" ]; ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'then\n    panic "Config source \\"$1\\" does not exist!"\nfi\n\nif ! [ -d "$2" ]' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '; then\n    mkdir -p "$2"\n    if [ $? -ne 0 ]; then\n        panic "Could not c' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'reate target directory \\"$2\\"!"\n    fi\nfi\n\nlist "$1" "$2"\nexit 0\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"

# Create file "/bin/syscheck"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf '#!/usr/bin/bash\n\npause() {\n    printf "Press ENTER to continue.."\n    read -' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf 's\n    printf "\\n"\n}\n\nif [ $UID -ne 0 ]; then\n    echo "Only root can do th' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf 'is!"\n    exit 1\nfi\n\nuname -a\npause\nsystemctl --failed\npause\nifconfig\npa' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf 'use\nnetstat -panut\npause\nps xfua\npause\ndf -h\npause\nmount\npause\npacman -' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf 'Syy 1> /dev/null\necho "Orphaned Packages Found:"\npacman -Qtdq\necho "Done!"\ne' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf 'xit 0\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"

# Create file "/bin/syslink"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '#!/usr/bin/bash\n\nsource "/etc/sysconfig.conf" 2> /dev/null\nif [ -z "$SYSCONFI' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'G" ]; then\n    echo "Could not find the System Configuration directory!"\n    e' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'xit 1\nfi\nif ! [ -d "$SYSCONFIG" ]; then\n    echo "System Configuration direct' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'ory \\"$SYSCONFIG\\" does not exist!"\n    exit 1\nfi\n\nSYSCONFIG=${SYSCONFIG%%' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '/}\n\nif [ $UID -ne 0 ]; then\n    echo "Only root can do this!"\n    exit 1\nfi' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '\n\nrelink "$SYSCONFIG" /\n\npacman -Qeq 1> "${SYSCONFIG}/packages.md"\ncp "/etc' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '/fstab" "${SYSCONFIG}/etc/fstab.nlk"\nsystemctl list-unit-files | grep '\''maske' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'd'\''| awk '\''{print $1}'\'' 1> "${SYSCONFIG}/masked.md"\nsystemctl list-units ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '| grep '\''@.'\'' | grep -vE '\''dead|exited'\''| awk '\''{print $1}'\'' | grep ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '-vE '\''getty|user|blockdev'\'' | grep '\''@.'\'' 1> "${SYSCONFIG}/indirect.md"\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'systemctl list-unit-files | awk '\''{print $1" "$2}'\'' | grep '\''enabled'\'' |' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' grep -v '\''.target'\'' | grep -v '\''enabled-runtime'\'' | awk '\''{print $1}'\''' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' 1> "${SYSCONFIG}/units.md"\n\nchown -R root:root "$SYSCONFIG"\nchmod -R 555 "$S' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'YSCONFIG"\n\nfind "$SYSCONFIG" -type f -exec chmod 444 {} \\;\nfind "$SYSCONFIG"' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' -type d -exec chmod 555 {} \\;\n\nchmod -R 555 "${SYSCONFIG}/bin"\nchmod -R 555' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' "${SYSCONFIG}/etc/profile.d"\nchmod -R 500 "${SYSCONFIG}/etc/syscheck.d"\n\nchm' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'od 555 "${SYSCONFIG}/etc/ssh"\nchmod 500 "${SYSCONFIG}/etc/sysctl.d"\nchmod 500 ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '"${SYSCONFIG}/etc/security"\nchmod 500 "${SYSCONFIG}/etc/iptables"\nchmod 444 "$' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '{SYSCONFIG}/etc/resolv.conf"\nchmod 500 "${SYSCONFIG}/etc/pacman.d/hooks"\nchmod' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' 400 "${SYSCONFIG}/etc/mkinitcpio.conf"\nchmod 440 "${SYSCONFIG}/etc/ssh/sshd_co' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'nfig"\nchmod 500 "${SYSCONFIG}/etc/security/limits.d"\nchmod 400 "${SYSCONFIG}/e' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'tc/sysctl.d/kernel.conf"\nchmod 400 "${SYSCONFIG}/etc/systemd/coredump.conf"\nch' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'mod 400 "${SYSCONFIG}/etc/iptables/iptables.rules"\nchmod 400 "${SYSCONFIG}/etc/' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'iptables/ip6tables.rules"\nchmod 400 "${SYSCONFIG}/etc/security/limits.d/limits.' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'conf"\n\nchmod 400 ${SYSCONFIG}/etc/iptables/*\nchmod 400 ${SYSCONFIG}/etc/pacma' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'n.d/hooks/*\n\nchmod 400 /etc/iptables/*\nchmod 400 /etc/pacman.d/hooks/*\n\nchm' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'od -R 555 "/etc/profile.d"\nchmod -R 500 "/etc/syscheck.d"\n\nchmod 555 "/etc/ss' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'h"\nchmod 555 "/etc/systemd"\nchmod 500 "/etc/sysctl.d"\nchmod 500 "/etc/iptable' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 's"\nchmod 500 "/etc/security"\nchmod 500 "/etc/pacman.d/hooks"\nchmod 500 "/etc/' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'security/limits.d"\n\nchmod 444 "/etc/motd"\nchmod 444 "/etc/hosts"\nchmod 550 "' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '/etc/pacman.d"\nchmod 444 "/etc/hostname"\nchmod 444 "/etc/locale.gen"\nchmod 44' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '4 "/etc/resolv.conf"\nchmod 400 "/etc/pacman.conf"\nchmod 444 "/etc/nsswitch.con' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'f"\nchmod 400 "/etc/vconsole.conf"\nchmod 444 "/etc/sysconfig.conf"\nchmod 444 "' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '/etc/ssh/ssh_config"\nchmod 400 "/etc/mkinitcpio.conf"\n\nchown root:root -R "/e' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'tc/systemd"\nchown root:root -R "/etc/iptables"\nchown root:root -R "/etc/pacman' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '.d"\nchown root:root -R "/etc/security"\nchown root:root -R "/etc/sysctl.d"\ncho' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'wn root:root -R "/etc/profile.d"\nchown root:root -R "/etc/syscheck.d"\n\nchown ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'root:root "/etc/motd"\nchown root:root "/etc/hosts"\nchown root:root "/etc/hostn' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'ame"\nchown root:root "/etc/locale.gen"\nchown root:root "/etc/resolv.conf"\ncho' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'wn root:root "/etc/pacman.conf"\nchown root:root "/etc/vconsole.conf"\nchown roo' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 't:root "/etc/nsswitch.conf"\nchown root:root "/etc/sysconfig.conf"\nchown root:r' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'oot "/etc/mkinitcpio.conf"\n\nfind "/etc/ssh" -type f -exec chmod 400 {} \\;\nfi' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'nd "/etc/systemd" -type f -exec chmod 444 {} \\;\nfind "/etc/pacman.d" -type f -' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'exec chmod 440 {} \\;\nfind "/etc/sysctl.d" -type f -exec chmod 440 {} \\;\nfind' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' "/etc/security" -type f -exec chmod 440 {} \\;\nfind "/etc/systemd/network" -ty' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'pe f -exec chmod 444 {} \\;\n\nif [ -d "/etc/syscheck.d" ]; then\n    for s in $' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '(ls /etc/syscheck.d/*.sh); do\n        source "$s"\n    done\nfi\n\necho "Broken' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' Links Found:"\nfind /etc -xtype l 2> /dev/null | grep -v "/proc" | grep -v "/tm' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'p" | grep -v "/run"\necho "Done!"\nexit 0\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"

# Create file "/bin/sysupdate"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf '#!/usr/bin/bash\n\nif [ $UID -ne 0 ]; then\n    echo "Only root can do this!"\n ' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf '   exit 1\nfi\n\nmount -o rw,remount /\n\nif [ "$1" == "--auto" ]; then\n    if ' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf '[ "$2" == "--download" ]; then\n        pacman -Syuw --noconfirm\n        exit 0' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf '\n    fi\n    pacman -Syu --noconfirm\nelse\n    pacman -Syu\nfi\n\nmount -o rw,' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf 'remount /\nsyslink\nsh -c "cd /opt/sysconfig; git status -s"\nmount -o ro,remoun' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf 't / 2> /dev/null || mount -Ro ro,remount /\n\necho "Update cache database.."\nup' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf 'date-cache\n\nsystemctl restart healthcheck.service\nsystemctl restart checkupda' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf 'tes.service\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"

# Create file "/etc/iptables/ip6tables.rules"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/iptables/ip6tables.rules"
/usr/bin/printf '*filter\n:INPUT DROP [0:0]\n:FORWARD DROP [0:0]\n:OUTPUT DROP [0:0]\nCOMMIT\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/iptables/ip6tables.rules"

# Create file "/etc/iptables/iptables.rules"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/iptables/iptables.rules"
/usr/bin/printf '*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\nCOMMI' >> "${ROOT}${SYSCONFIG_DIR}/etc/iptables/iptables.rules"
/usr/bin/printf 'T' >> "${ROOT}${SYSCONFIG_DIR}/etc/iptables/iptables.rules"

# Create file "/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PreTransaction\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'Exec        = /usr/bin/mount -o remount,rw /\nDescription = Mounting / as read/w' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'rite..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"

# Create file "/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = iptables\nOperation   = Upgrade\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf '\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bin/bash -c "rm /e' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf 'tc/iptables/simple_firewall.rules; rm /etc/iptables/empty.rules"\nDescription = ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf 'Removing simple rule files..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"

# Create file "/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'n/bash -c "pacman -Qtdq || echo '\''No orphans found.'\''"\nDescription = Findin' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'g orphan packages..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"

# Create file "/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'n/bash -c "paccache -rk2; paccache -ruk0"\nDescription = Removing old cached pac' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'kages..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"

# Create file "/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf 'n/bash -c "find /etc -type f -name *.pac* -ls"\nDescription = Looking for *.pac*' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf ' files..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"

# Create file "/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PostTransaction' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf '\nExec        = /usr/bin/syslink\nDescription = Fixing permissions for system fi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf 'les..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"

# Create file "/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PostTransaction' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf '\nExec        = /usr/bin/bash -c "mount -ro remount,ro / 2> /dev/null || mount -' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf 'Rro remount,ro /"\nDescription = Mounting / as read only..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"

# Create file "/etc/profile.d/alias.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/alias.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nalias nano="nano -SLlwxiE --tabsize=4"\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/alias.sh"

# Create file "/etc/profile.d/history.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/history.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nHISTSIZE=500\nHISTFILESIZE=0\nHISTFILE=/dev/null\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/history.sh"

# Create file "/etc/profile.d/proxy.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/proxy.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nexport http_proxy="http://host.usb:8050/"\nexport https_proxy' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/proxy.sh"
/usr/bin/printf '="http://host.usb:8050/"\nexport no_proxy="localhost,127.0.0.1,localaddress,.loc' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/proxy.sh"
/usr/bin/printf 'aldomain.com,.usb"\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/proxy.sh"

# Create file "/etc/profile.d/umask.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/umask.sh"
/usr/bin/printf '#!/usr/bin/bash\n\numask 027\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/umask.sh"

# Create file "/etc/profile.d/z_system_status.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nstatus_repo() {\n    source "/etc/sysconfig.conf" 2> /dev/nul' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'l\n    if [ $? -ne 0 ]; then\n        return 0\n    fi\n    if [ -z "$SYSCONFIG"' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' ]; then\n        return 0\n    fi\n    if ! [ -d "$SYSCONFIG" ]; then\n        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'return 0\n    fi\n    SYSCONFIG=${SYSCONFIG%%/}\n    if ! [ -d "${SYSCONFIG}/.gi' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 't" ]; then\n        return 0\n    fi\n    if ! [[ -z $(bash -c "cd ${SYSCONFIG};' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' git status | grep -iE '\''modified|deleted|Untracked'\''") ]]; then\n        pr' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'intf '\''# Config:\\tSync needed, use "syspush"\\n'\''\n    else\n        printf' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' "# Config:\\tUp-to-Date\\n"\n    fi\n}\nstatus_storage() {\n    printf "# Stora' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'ge:\\n"\n    df -h | grep -v "tmpfs" | grep -E '\''/dev/|/opt/|/mnt/'\'' | sort ' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '-r | awk '\''{print ""$1" "$5" ("$3"/"$2")"}'\'' | column -t | awk '\''{print "#' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '     "$0}'\''\n}\nstatus_services() {\n    nl=$(netstat -panut 2>/dev/null | gre' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'p LISTEN | wc -l)\n    ne=$(netstat -panut 2>/dev/null | grep ESTABLISHED | wc -' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'l)\n    printf "# Network:\\t$ne Established, $nl Listening\\n"\n    st=$(system' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'ctl --all --no-legend --no-pager | grep ".timer" | wc -l)\n    sf=$(systemctl --' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'state=failed --no-legend --no-pager | grep ".service" | wc -l)\n    sa=$(systemc' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'tl --state=active --no-legend --no-pager | grep ".service" | grep "running" | wc' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' -l)\n    printf "# Services:\\t$sa Running, $sf Failed, $st Timers\\n"\n}\n\nif' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' [[ $- != *i* ]] || [ ! -z "$SSH_CLIENT" ]; then\n    printf "##################' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '############################################\\n"\n    status_storage\n    printf' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' "# Uptime:\\t$(uptime --pretty | sed '\''s/up //g'\'')\\n"\n    printf "# Kerne' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'l:\\t$(uname -r)\\n"\n    status_repo\n    status_services\n    printf "########' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '######################################################\\n"\nfi\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"

# Create file "/etc/security/limits.d/limits.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/security/limits.d/limits.conf"
/usr/bin/printf '* hard core 0\n* soft nproc 2500\n* hard nproc 5000\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/security/limits.d/limits.conf"

# Create file "/etc/ssh/ssh_config"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'Host *\n    Port                            22\n    MACs                        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '    hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@ope' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'nssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com\n    Tunnel           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '               no\n    Ciphers                         chacha20-poly1305@openssh' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'ctr\n    Protocol                        2\n    BatchMode                       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'no\n    ForwardX11                      no\n    CheckHostIP                     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'yes\n    IdentityFile                    ~/.ssh/id_rsa\n    IdentityFile        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            ~/.ssh/id_ed25519\n    ForwardAgent                    no\n    KexAl' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'gorithms                   curve25519-sha256@libssh.org,diffie-hellman-group-exc' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'hange-sha256\n    VisualHostKey                   yes\n    AddressFamily        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '           any\n    ConnectTimeout                  30\n    HashKnownHosts      ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            yes\n    HostKeyAlgorithms               ssh-ed25519-cert-v01@openss' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'h.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa\n    PermitLocalCommand  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            no\n    GSSAPIAuthentication            no\n    PubkeyAuthentication' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            yes\n    StrictHostKeyChecking           ask\n    PasswordAuthentica' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'tion          no\n    HostbasedAuthentication         no\n    GSSAPIDelegateCred' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'entials       no\n    ChallengeResponseAuthentication yes\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"

# Create file "/etc/ssh/sshd_config"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'Port                            22\nMACs                            hmac-sha2-51' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '2-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sh' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'a2-512,hmac-sha2-256,umac-128@openssh.com\nUsePAM                          yes\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'Ciphers                         chacha20-poly1305@openssh.com,aes256-gcm@openssh' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr\nHostKey           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '              /etc/ssh/ssh_host_rsa_key\nHostKey                         /etc/ss' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'h/ssh_host_ed25519_key\nProtocol                        2\nSubsystem            ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '           sftp /usr/lib/ssh/sftp-server\nPrintMotd                       no\nPe' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'rmitTTY                       yes\nCompression                     no\nMaxStartu' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'ps                     10:30:100\nGatewayPorts                    no\nPermitTunn' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'el                    no\nPrintLastLog                    yes\nIgnoreRhosts     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '               yes\nTCPKeepAlive                    yes\nAddressFamily          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '         any\nListenAddress                   10.1.10.1\nKexAlgorithms          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '         curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256\nLogi' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'nGraceTime                  1m\nPermitRootLogin                 yes\nAllowTcpFor' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'warding              no\nAuthorizedKeysFile              .ssh/authorized_keys\nC' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'lientAliveCountMax             0\nClientAliveInterval             600\nIgnoreUse' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'rKnownHosts            no\nPermitEmptyPasswords            no\nAllowAgentForward' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'ing            no\nPubkeyAuthentication            yes\nPasswordAuthentication  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '        yes\nKerberosAuthentication          no\nHostbasedAuthentication        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf ' no\nChallengeResponseAuthentication no\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"

# Create file "/etc/syscheck.d/cache.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nrm "/etc/.updated" 2> /dev/null\nrm "/etc/.pwd.lock" 2> /dev/' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'null\nrm "/etc/ld.so.cache" 2> /dev/null\n\nif ! [ -e "/var/cache/ld.so.cache" ]' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf '; then\n    touch "/var/cache/ld.so.cache" 2> /dev/null\nfi\nln -s "/var/cache/l' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'd.so.cache" "/etc/ld.so.cache" 2> /dev/null\n\nchmod 0644 "/var/cache/ld.so.cach' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'e"\nchown root:root "/var/cache/ld.so.cache"\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"

# Create file "/etc/sysctl.d/ipv6.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/ipv6.conf"
/usr/bin/printf 'net.ipv6.conf.all.disable_ipv6      = 1\nnet.ipv6.conf.usb0.disable_ipv6     = 1' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/ipv6.conf"
/usr/bin/printf '\nnet.ipv6.conf.all.accept_redirects  = 0\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/ipv6.conf"

# Create file "/etc/sysctl.d/kernel.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'fs.file-max                     = 372925\nvm.swappiness                   = 10\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'fs.suid_dumpable                = 0\nfs.protected_fifos              = 1\nfs.pro' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'tected_regular            = 1\nkernel.kptr_restrict            = 2\nkernel.dmesg' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf '_restrict           = 1\nfs.protected_symlinks           = 1\nfs.protected_hardl' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'inks          = 1\nkernel.yama.ptrace_scope        = 3\nkernel.kexec_load_disabl' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'ed      = 1\nfs.inotify.max_user_watches     = 16777215\nfs.inotify.max_queued_e' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'vents    = 32767\nvm.dirty_writeback_centisecs    = 1500\nfs.inotify.max_user_in' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'stances   = 4096\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"

# Create file "/etc/sysctl.d/network.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'net.core.rmem_max                           = 16777216\nnet.ipv4.tcp_rmem       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                    = 4096 1048576 2097152\nnet.ipv4.tcp_wmem                   ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '        = 4096 65536 16777216\nnet.core.wmem_max                           = 167' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '77216\nnet.core.somaxconn                          = 32768\nnet.core.optmem_max ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                        = 65536\nnet.ipv4.tcp_rfc1337                        = 1' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '\nnet.ipv4.udp_rmem_min                       = 8192\nnet.ipv4.udp_wmem_min     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                  = 8192\nnet.core.rmem_default                       = 1048576\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'net.core.wmem_default                       = 1048576\nnet.ipv4.tcp_fastopen    ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                   = 1\nnet.ipv4.tcp_tw_reuse                       = 1\nnet.cor' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'e.netdev_budget                      = 50000\nnet.ipv4.tcp_timestamps           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '          = 1\nnet.core.bpf_jit_harden                     = 2\nnet.ipv4.tcp_syn' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'cookies                     = 1\nnet.ipv4.tcp_low_latency                    = 1' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '\nnet.ipv4.tcp_fin_timeout                    = 10\nnet.ipv4.tcp_keepalive_time ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                = 600\nnet.core.netdev_max_backlog                 = 65535\nnet.' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'ipv4.tcp_max_tw_buckets                 = 2097151\nnet.ipv4.conf.all.rp_filter  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '               = 2\nnet.core.netdev_budget_usecs                = 5000\nnet.ipv4' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '.tcp_max_syn_backlog                = 65535\nnet.ipv4.ip_local_port_range       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '         = 1024 65535\nnet.ipv4.tcp_keepalive_intvl                = 30\nnet.ipv' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '4.tcp_keepalive_probes               = 6\nnet.ipv4.conf.default.rp_filter       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '      = 2\nnet.ipv4.conf.all.send_redirects            = 0\nnet.ipv4.conf.all.ac' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'cept_redirects          = 0\nnet.ipv4.tcp_slow_start_after_idle          = 0\nne' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 't.ipv4.icmp_echo_ignore_broadcasts        = 1\nnet.ipv4.conf.default.send_redire' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'cts        = 0\nnet.ipv4.conf.default.accept_redirects      = 0\nnet.ipv4.icmp_i' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'gnore_bogus_error_responses  = 1\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"

# Create file "/etc/systemd/network/usb0.network"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network/usb0.network"
/usr/bin/printf '[Match]\nType    = gadget\n\n[Network]\nDNS     = 10.1.10.2\nAddress = 10.1.10.1' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network/usb0.network"
/usr/bin/printf '/30\n\n[Route]\nGateway = 10.1.10.1\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network/usb0.network"

# Create file "/etc/systemd/coredump.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/coredump.conf"
/usr/bin/printf '[Coredump]\nStorage = none\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/coredump.conf"

# Create file "/etc/systemd/journald.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf '[Journal]\nAudit               = on\nStorage             = volatile\nReadKMsg   ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf '         = yes\nCompress            = yes\nSplitMode           = uid\nMaxFileSec' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf '          = 12h\nSystemMaxUse        = 64M\nMaxLevelStore       = info\nForwardT' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf 'oSyslog     = no\nMaxRetentionSec     = 12h\nSystemMaxFileSize   = 32M\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"

# Create file "/etc/systemd/resolved.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf '[Resolve]\nCache                       = yes\nLLMNR                       = no\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'DNSSEC                      = allow-downgrade\nDNSOverTLS                  = no\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'FallbackDNS                 = 127.0.0.1\nReadEtcHosts                = yes\nMult' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'icastDNS                = no\nDNSStubListener             = no\nResolveUnicastSi' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'ngleLabel   = no' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"

# Create file "/etc/systemd/timesyncd.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/timesyncd.conf"
/usr/bin/printf '[Time]\nNTP                 = time.nist.gov host.usb\nSaveIntervalSec     = 360\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/timesyncd.conf"
/usr/bin/printf 'RootDistanceMaxSec  = 30\nPollIntervalMinSec  = 32\nPollIntervalMaxSec  = 2048\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/timesyncd.conf"

# Create file "/etc/systemd/system/ldconfig.service.d/override.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/ldconfig.service.d/override.conf"
/usr/bin/printf '[Service]\nExecStart =\nExecStart =  /sbin/ldconfig -XC /var/cache/ld.so.cache\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/ldconfig.service.d/override.conf"

# Create file "/etc/systemd/pstore.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/pstore.conf"
/usr/bin/printf '[PStore]\nStorage = none\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/pstore.conf"

# Create file "/etc/systemd/system.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '[Manager]\nLogTime                         = no\nLogColor                       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf ' = yes\nDumpCore                        = no\nLogLevel                        = ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'warning\nLogTarget                       = journal-or-kmsg\nShowStatus          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '            = auto\nNUMAPolicy                      = default\nCrashShell       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '               = no\nCrashReboot                     = no\nLogLocation          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '           = no\nCrashChangeVT                   = no\nNoNewPrivileges          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '       = no\nDefaultTasksMax                 = 15%%\nDefaultOOMPolicy           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '     = stop\nStatusUnitFormat                = description\nKExecWatchdogSec    ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '            = off\nDefaultRestartSec               = 100ms\nDefaultLimitNOFILE  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '            = 1024:524288\nRuntimeWatchdogSec              = 0\nShutdownWatchdog' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'Sec             = 0\nDefaultIOAccounting             = no\nDefaultIPAccounting  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '           = no\nDefaultStandardError            = inherit\nDefaultCPUAccounting' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '            = no\nDefaultTimeoutStopSec           = 30s\nDefaultStandardOutput  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf '         = journal\nCtrlAltDelBurstAction           = reboot-force\nDefaultTimeo' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'utStartSec          = 30s\nDefaultStartLimitBurst          = 5\nDefaultTasksAcco' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'unting          = yes\nDefaultTimerAccuracySec         = 1min\nDefaultMemoryAcco' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'unting         = yes\nDefaultBlockIOAccounting        = no\nDefaultStartLimitInt' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"
/usr/bin/printf 'ervalSec    = 10s\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system.conf"

# Create file "/etc/systemd/networkd.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/networkd.conf"
/usr/bin/printf '[Network]\nSpeedMeter          = no\nManageForeignRoutes = yes\n\n[DHCP]\nDUIDTy' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/networkd.conf"
/usr/bin/printf 'pe            = vendor\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/networkd.conf"

# Create file "/etc/systemd/homed.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/homed.conf"
/usr/bin/printf '[Home]\nDefaultStorage          = directory\nDefaultFileSystemType   = btrfs\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/homed.conf"

# Create file "/etc/systemd/logind.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '[Login]\nNAutoVTs                        = 2\nReserveVT                       = ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '5\nRemoveIPC                       = yes\nIdleAction                      = igno' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf 're\nSessionsMax                     = 8192\nInhibitorsMax                   = 81' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '92\nHandlePowerKey                  = poweroff\nHandleLidSwitch                 ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '= ignore\nHandleRebootKey                 = reboot\nUserStopDelaySec            ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '    = 10\nHandleSuspendKey                = suspend\nKillExcludeUsers           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '     = root\nKillUserProcesses               = yes\nHoldoffTimeoutSec           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '    = 10s\nInhibitDelayMaxSec              = 5s\nHandleHibernateKey             ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf ' = hibernate\nRuntimeDirectorySize            = 10%%\nHandleLidSwitchDocked     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '      = ignore\nPowerKeyIgnoreInhibited         = no\nHandleRebootKeyLongPress  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '      = poweroff\nRebootKeyIgnoreInhibited        = no\nLidSwitchIgnoreInhibited' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '        = no\nSuspendKeyIgnoreInhibited       = no\nHibernateKeyIgnoreInhibited ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"
/usr/bin/printf '    = no\nHandleLidSwitchExternalPower    = ignore\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/logind.conf"

# Create file "/etc/systemd/sleep.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/sleep.conf"
/usr/bin/printf '[Sleep]\nAllowSuspend                = no\nAllowHibernation            = no\nAll' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/sleep.conf"
/usr/bin/printf 'owHybridSleep            = no\nAllowSuspendThenHibernate   = no\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/sleep.conf"

# Create file "/etc/hostname"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/hostname"
/usr/bin/printf 'beagle' >> "${ROOT}${SYSCONFIG_DIR}/etc/hostname"

# Create file "/etc/hosts"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/hosts"
/usr/bin/printf '::1         localhost.local     localhost\n127.0.0.1   localhost.local     local' >> "${ROOT}${SYSCONFIG_DIR}/etc/hosts"
/usr/bin/printf 'host\n10.1.10.1   beagle.usb          beagle\n10.1.10.1   beagle.usb          be' >> "${ROOT}${SYSCONFIG_DIR}/etc/hosts"
/usr/bin/printf 'agle\n10.1.10.2   host.usb            host\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/hosts"

# Create file "/etc/locale.gen"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/locale.gen"
/usr/bin/printf 'en_US.UTF-8 UTF-8\nen_US       ISO-8859-1\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.gen"

# Create file "/etc/mkinitcpio.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"
/usr/bin/printf 'MODULES=()\nCOMPRESSION="lz4"\nCOMPRESSION_OPTIONS=(-9)\nBINARIES=(btrfs fsck.bt' >> "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"
/usr/bin/printf 'rfs)\nFILES=(/usr/bin/btrfs /usr/bin/fsck.btrfs)\nHOOKS=(systemd autodetect modc' >> "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"
/usr/bin/printf 'onf block sd-vconsole btrfs filesystems fsck)\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"

# Create file "/etc/motd"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/motd"

# Create file "/etc/nsswitch.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"
/usr/bin/printf 'passwd:     files systemd\ngroup:      files systemd\ngshadow:    files systemd\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"
/usr/bin/printf 'shadow:     files systemd\n\npublickey:  files\n\nhosts:      files myhostname r' >> "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"
/usr/bin/printf 'esolve dns\nnetworks:   files\n\nprotocols:  files\nservices:   files\nethers:  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"
/usr/bin/printf '   files\nrpc:        files\n\nnetgroup:   files\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"

# Create file "/etc/pacman.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf '[options]\nDBPath              = /var/lib/pacman\nGPGDir              = /etc/pac' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'man.d/gnupg\nRootDir             = /\nHookDir             = /etc/pacman.d/hooks\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'LogFile             = /var/log/pacman.log\nHoldPkg             = pacman glibc\nC' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'acheDir            = /var/cache/pacman/pkg\nSigLevel            = Required Datab' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'aseOptional\nCleanMethod         = KeepInstalled\nArchitecture        = armv7h\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'ParallelDownloads   = 5\nLocalFileSigLevel   = Optional\n\nVerbosePkgLists\n\n[a' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'ur]\nInclude             = /etc/pacman.d/mirrorlist\n[core]\nInclude            ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf ' = /etc/pacman.d/mirrorlist\n[extra]\nInclude             = /etc/pacman.d/mirror' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'list\n[alarm]\nInclude             = /etc/pacman.d/mirrorlist\n[community]\nIncl' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'ude             = /etc/pacman.d/mirrorlist\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"

# Create file "/etc/vconsole.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/vconsole.conf"
/usr/bin/printf 'KEYMAP=us\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/vconsole.conf"

# Create file "/etc/dnsmasq.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'no-hosts\nbind-dynamic\nexpand-hosts\n\nport            = 53\nuser            = ' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'dnsmasq\ngroup           = dnsmasq\nlocal           = /usb/\ndomain          = u' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'sb,10.1.10.1/30\naddress         = /beagle.usb/10.1.10.1\naddress         = /bea' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'gle/10.1.10.1\ninterface       = usb0\ndhcp-range      = 10.1.10.2,10.1.10.2,255' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf '.255.255.252,1m\nresolv-file     = /etc/resolv.conf\ndhcp-option     = vendor:MS' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'FT,2,1i\ndhcp-option     = option:router,10.1.10.1\ndhcp-option     = option:dom' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'ain-search,usb\nlisten-address  = 10.1.10.1\ndhcp-lease-max  = 1\ndhcp-leasefile' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf '  = /dev/null\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"

# Create file "/etc/locale.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"
/usr/bin/printf 'LANG=en_US.UTF-8\nLC_TIME="en_US.UTF-8"\nLC_NAME="en_US.UTF-8"\nLC_CTYPE="en_US.' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"
/usr/bin/printf 'UTF-8"\nLC_PAPER="en_US.UTF-8"\nLC_NUMERIC="en_US.UTF-8"\nLC_COLLATE="en_US.UTF-' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"
/usr/bin/printf '8"\nLC_ADDRESS="en_US.UTF-8"\nLC_MONETARY="en_US.UTF-8"\nLC_MESSAGES="en_US.UTF-' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"
/usr/bin/printf '8"\nLC_TELEPHONE="en_US.UTF-8"\nLC_MEASUREMENT="en_US.UTF-8"\nLC_IDENTIFICATION=' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"
/usr/bin/printf '"en_US.UTF-8"\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.conf"

