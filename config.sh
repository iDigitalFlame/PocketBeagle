#!/bin/bash

mkdir -p "${ROOT}${SYSCONFIG_DIR}/bin" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/iptables" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/profile.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/security/limits.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/ssh" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/systemd" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/ldconfig.service.d" 2> /dev/null
mkdir -p "${ROOT}${SYSCONFIG_DIR}/etc" 2> /dev/null

# Create file "/bin/relink"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '#!/usr/bin/bash\n# Relinks files to their respective directories.\n# iDigitalFla' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'me\n\nDEBUG=0\n\nif [ $# -ne 2 ]; then\n    printf "relink <config source> <conf' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'ig target> [debug]\\n"\n    exit 1\nfi\n\nif [ $# -eq 3 ]; then\n    DEBUG=1\nfi' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '\n\nlist() {\n    if [ $# -ne 2 ]; then\n        return 1\n    fi\n    fc=${1%%/' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '}\n    ft=${2%%/}\n    for file in $(find "$fc" -type f -print); do\n        fp=' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '$(printf "$file" | awk "{gsub(\\"${fc}\\", \\"\\"); print \\$1}")\n        if ! ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '[ -z $(echo $fp | grep -vE '\''\\.(nlk|nolink)$|^\\/\\.git(\\/|ignore$|config$)|' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '^\\/(LICENSE|license)$|^\\/[a-zA-Z0-9_.]+\\.(md|vscode|MD|code-workspace)$'\'') ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ']; then\n            check "$ft$fp" "$fc$fp"\n        fi\n    done\n    return 0' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '\n}\n\nlink() {\n    if [ $# -ne 2 ]; then\n        return 1\n    fi\n    rm -f ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '"$1" 2> /dev/null\n    fd=$(dirname "$1")\n    if ! [ -d "$fd" ]; then\n        ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'printf "Making $fd\\n"\n        mkdir -p "$fd" 2> /dev/null\n        if [ $? -ne' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ' 0 ]; then\n            panic "Cannot create directory \\"$fd\\"!"\n        fi\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '        if [ $UID -eq 0 ]; then\n            chmod 555 "$fd"\n        else\n    ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '        chmod 755 "$fd"\n        fi\n    fi\n    ln -s "$2" "$1"\n    if [ $? -n' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'e 0 ]; then\n        panic "Could not link \\"$1\\" to \\"$2\\"!"\n    fi\n    p' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf 'rintf "[+] Relinked \\"$1\\" to \\"$2\\".\\n"\n    return 0\n}\n\ncheck() {\n   ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf ' if [ $# -ne 2 ]; then\n        return 1\n    fi\n    if [ $DEBUG -eq 1 ]; then\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '        printf "[+] Checking \\"$1\\".. \\n"\n    fi\n    if ! [ -L "$1" ]; then' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '\n        printf "File \\"$1\\" is invalid, updating!\\n"\n        link "$1" "$2' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '"\n    else\n        fl=$(ls -al "$1" | awk '\''{print $11}'\'')\n        if ! [' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '[ "$fl" == "$2" ]]; then\n            printf "File \\"$1\\" is invalid, updating' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '!\\n"\n            link "$1" "$2"\n        else\n            if [ $DEBUG -eq 1 ]' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '; then\n                printf "File \\"$1\\" is valid!\\n"\n            fi\n   ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '     fi\n    fi\n    return 0\n}\n\npanic() {\n    printf "[!] $1\\n"\n    exit ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '1\n}\n\nif ! [ -d "$1" ]; then\n    panic "Config source \\"$1\\" does not exist' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '!"\nfi\n\nif ! [ -d "$2" ]; then\n    mkdir -p "$2"\n    if [ $? -ne 0 ]; then\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '        panic "Could not create target directory \\"$2\\"!"\n    fi\nfi\n\nlist ' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"
/usr/bin/printf '"$1" "$2"\nexit 0\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/relink"

# Create file "/bin/syscheck"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf '#!/usr/bin/bash\n# Preforms basic system information display checks.\n# iDigital' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf 'Flame\n\npause() {\n    printf "Press ENTER to continue.."\n    read -s\n    pri' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf 'ntf "\\n"\n}\n\nif [ $UID -ne 0 ]; then\n    printf "Only root can do this!\\n"\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf '    exit 1\nfi\n\nuname -a\npause\nsystemctl --failed\npause\nifconfig\npause\nn' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf 'etstat -panut\npause\nps xfua\npause\ndf -h\npause\nmount\npause\npacman -Syy 1>' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf ' /dev/null\nprintf "Orphaned Packages Found:\\n"\npacman -Qtdq\nprintf "Done!\\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"
/usr/bin/printf '"\nexit 0\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syscheck"

# Create file "/bin/syslink"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '#!/usr/bin/bash\n# Wrapper and permissions fix-er for "relink".\n# iDigitalFlame' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '\n\nsource "/etc/sysconfig.conf" 2> /dev/null\nif [ $? -ne 0 ]; then\n    printf' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' "Could not locate or source \\"/etc/sysconfig.conf\\"!\\n"\n    exit 1\nfi\nif ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '[ -z "$SYSCONFIG" ]; then\n    printf "Could not find System Configuration direc' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'tory!\\n"\n    exit 1\nfi\nif ! [ -d "$SYSCONFIG" ]; then\n    printf "System Co' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'nfiguration directory \\"$SYSCONFIG\\" does not exist!\\n"\n    exit 1\nfi\nSYSC' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'ONFIG=${SYSCONFIG%%/}\n\nif [ $UID -ne 0 ]; then\n    printf "Only root can do t' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'his!\\n"\n    exit 1\nfi\n\nrelink "$SYSCONFIG" /\n\npacman -Qeq 1> "${SYSCONFIG' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '}/packages.md"\ncp /etc/fstab "${SYSCONFIG}/etc/fstab.nlk"\nsystemctl list-unit-' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'files | grep '\''enabled'\'' | grep -v '\''enabled-runtime'\'' | awk '\''{print ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '$1}'\'' 1> "${SYSCONFIG}/units.md"\nsystemctl list-units | grep '\''@.'\'' | gre' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'p -vE '\''dead|exited'\''| awk '\''{print $1}'\'' | grep -vE '\''getty|user|bloc' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'kdev'\'' | grep '\''@.'\'' 1> "${SYSCONFIG}/indirect.md"\n\nchown -R root:root "' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '$SYSCONFIG"\nchmod -R 555 "$SYSCONFIG"\n\nfind "$SYSCONFIG" -type f -exec chmod ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '444 {} \\;\nfind "$SYSCONFIG" -type d -exec chmod 555 {} \\;\n\nchmod -R 555 "${' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'SYSCONFIG}/bin"\nchmod -R 555 "${SYSCONFIG}/etc/profile.d"\nchmod -R 500 "${SYSC' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'ONFIG}/etc/syscheck.d"\n\nchmod 555 "${SYSCONFIG}/etc/ssh"\nchmod 500 "${SYSCONF' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'IG}/etc/sysctl.d"\nchmod 500 "${SYSCONFIG}/etc/iptables"\nchmod 500 "${SYSCONFIG' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '}/etc/pacman.d/hooks"\nchmod 400 "${SYSCONFIG}/etc/mkinitcpio.conf"\nchmod 440 "' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '${SYSCONFIG}/etc/ssh/sshd_config"\nchmod 500 "${SYSCONFIG}/etc/security/limits.d' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '"\nchmod 400 "${SYSCONFIG}/etc/sysctl.d/kernel.conf"\nchmod 400 "${SYSCONFIG}/et' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'c/systemd/coredump.conf"\nchmod 400 "${SYSCONFIG}/etc/iptables/iptables.rules"\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'chmod 400 "${SYSCONFIG}/etc/iptables/ip6tables.rules"\nchmod 400 "${SYSCONFIG}/e' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'tc/security/limits.d/limits.conf"\n\nchmod 400 ${SYSCONFIG}/etc/pacman.d/hooks/*' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '\n\nchmod -R 555 /etc/profile.d\nchmod -R 500 /etc/syscheck.d\n\nchmod 555 /etc/' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'ssh\nchmod 500 /etc/sysctl.d\nchmod 500 /etc/iptables\nchmod 500 /etc/pacman.d/h' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'ooks\nchmod 500 /etc/security/limits.d\n\nif [ -d "/etc/syscheck.d" ]; then\n   ' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf ' for s in $(ls /etc/syscheck.d/*.sh); do\n        source "$s"\n    done\nfi\n\np' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf 'rintf "Broken Links Found:\\n"\nfind /etc -xtype l 2> /dev/null | grep -v "/proc' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"
/usr/bin/printf '" | grep -v "/tmp" | grep -v "/run"\nprintf "Done!\\n"\nexit 0\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/syslink"

# Create file "/bin/sysupdate"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf '#!/usr/bin/bash\n# Attempts to update the system and relink any broken configura' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf 'tion links.\n# iDigitalFlame\n\nif [ $UID -ne 0 ]; then\n    printf "Only root c' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"
/usr/bin/printf 'an do this!\\n"\n    exit 1\nfi\n\npacman -Syu\nsyslink\nexit 0\n' >> "${ROOT}${SYSCONFIG_DIR}/bin/sysupdate"

# Create file "/etc/iptables/ip6tables.rules"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/iptables/ip6tables.rules"
/usr/bin/printf '*filter\n:INPUT DROP [0:0]\n:FORWARD DROP [0:0]\n:OUTPUT DROP [0:0]\nCOMMIT\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/iptables/ip6tables.rules"

# Create file "/etc/iptables/iptables.rules"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/iptables/iptables.rules"
/usr/bin/printf '*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\nCOMMI' >> "${ROOT}${SYSCONFIG_DIR}/etc/iptables/iptables.rules"
/usr/bin/printf 'T' >> "${ROOT}${SYSCONFIG_DIR}/etc/iptables/iptables.rules"

# Create file "/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PreTransaction\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'Exec        = /usr/bin/mount -o remount,rw /\nDescription = Mounting / as read/w' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"
/usr/bin/printf 'rite..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/00-root.hook"

# Create file "/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = iptables\nOperation   = Upgrade\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf '\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bin/bash -c "rm /e' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf 'tc/iptables/simple_firewall.rules; rm /etc/iptables/empty.rules"\nDescription = ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"
/usr/bin/printf 'Removing simple rule files..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/y0-iptables.hook"

# Create file "/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'n/bash -c "pacman -Qtdq || echo '\''No orphans found.'\''"\nDescription = Findin' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"
/usr/bin/printf 'g orphan packages..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z0-orphans.hook"

# Create file "/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'n/bash -c "paccache -rk2; paccache -ruk0"\nDescription = Removing old cached pac' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"
/usr/bin/printf 'kages..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/z1-cache.hook"

# Create file "/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf 'on   = Upgrade\n\n[Action]\nWhen        = PostTransaction\nExec        = /usr/bi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf 'n/bash -c "find /etc -type f -name *.pac* -ls"\nDescription = Looking for *.pac*' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"
/usr/bin/printf ' files..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-findpac.hook"

# Create file "/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PostTransaction' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf '\nExec        = /usr/bin/syslink\nDescription = Fixing permissions for system fi' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"
/usr/bin/printf 'les..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/za-fixperms.hook"

# Create file "/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf '[Trigger]\nType        = Package\nTarget      = *\nOperation   = Remove\nOperati' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf 'on   = Install\nOperation   = Upgrade\n\n[Action]\nWhen        = PostTransaction' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf '\nExec        = /usr/bin/bash -c "mount -ro remount,ro / 2> /dev/null || mount -' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"
/usr/bin/printf 'Rro remount,ro /"\nDescription = Mounting / as read only..\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.d/hooks/zz-root.hook"

# Create file "/etc/profile.d/alias.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/alias.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nalias nano="nano -SLlwxiE --tabsize=4"\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/alias.sh"

# Create file "/etc/profile.d/history.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/history.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nHISTSIZE=500\nHISTFILESIZE=0\nHISTFILE=/dev/null\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/history.sh"

# Create file "/etc/profile.d/proxy.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/proxy.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nexport http_proxy="http://host.usb:8050/"\nexport https_proxy' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/proxy.sh"
/usr/bin/printf '="http://host.usb:8050/"\nexport no_proxy="localhost,127.0.0.1,localaddress,.loc' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/proxy.sh"
/usr/bin/printf 'aldomain.com,.usb"\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/proxy.sh"

# Create file "/etc/profile.d/umask.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/umask.sh"
/usr/bin/printf '#!/usr/bin/bash\n\numask 027\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/umask.sh"

# Create file "/etc/profile.d/z_system_status.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nstatus_repo() {\n    source "/etc/sysconfig.conf" 2> /dev/nul' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'l\n    if [ $? -ne 0 ]; then\n        return 0\n    fi\n    if [ -z "$SYSCONFIG"' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' ]; then\n        return 0\n    fi\n    if ! [ -d "$SYSCONFIG" ]; then\n        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'return 0\n    fi\n    SYSCONFIG=${SYSCONFIG%%/}\n    if ! [ -d "${SYSCONFIG}/.gi' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 't" ]; then\n        return 0\n    fi\n    if ! [[ -z $(bash -c "cd ${SYSCONFIG};' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' git status | grep -iE '\''modified|deleted|Untracked'\''") ]]; then\n        pr' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'intf '\''# Config:\\tSync needed, use "syspush"\\n'\''\n    else\n        printf' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' "# Config:\\tUp-to-Date\\n"\n    fi\n}\nstatus_storage() {\n    printf "# Stora' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'ge:\\n"\n    df -h | grep -v "tmpfs" | grep -E '\''/dev/|/opt/|/mnt/'\'' | sort ' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '-r | awk '\''{print ""$1" "$5" ("$3"/"$2")"}'\'' | column -t | awk '\''{print "#' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '     "$0}'\''\n}\nstatus_services() {\n    nl=$(netstat -panut 2>/dev/null | gre' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'p LISTEN | wc -l)\n    ne=$(netstat -panut 2>/dev/null | grep ESTABLISHED | wc -' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'l)\n    printf "# Network:\\t$ne Established, $nl Listening\\n"\n    st=$(system' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'ctl --all --no-legend --no-pager | grep ".timer" | wc -l)\n    sf=$(systemctl --' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'state=failed --no-legend --no-pager | grep ".service" | wc -l)\n    sa=$(systemc' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'tl --state=active --no-legend --no-pager | grep ".service" | grep "running" | wc' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' -l)\n    printf "# Services:\\t$sa Running, $sf Failed, $st Timers\\n"\n}\n\nif' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' [[ $- != *i* ]] || [ ! -z "$SSH_CLIENT" ]; then\n    printf "##################' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '############################################\\n"\n    status_storage\n    printf' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf ' "# Uptime:\\t$(uptime --pretty | sed '\''s/up //g'\'')\\n"\n    printf "# Kerne' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf 'l:\\t$(uname -r)\\n"\n    status_repo\n    status_services\n    printf "########' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"
/usr/bin/printf '######################################################\\n"\nfi\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/profile.d/z_system_status.sh"

# Create file "/etc/security/limits.d/limits.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/security/limits.d/limits.conf"
/usr/bin/printf '* hard core 0\n* soft nproc 2500\n* hard nproc 5000\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/security/limits.d/limits.conf"

# Create file "/etc/ssh/ssh_config"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'Host *\n    Port                            22\n    MACs                        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '    hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@ope' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'nssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com\n    Tunnel           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '               no\n    Ciphers                         chacha20-poly1305@openssh' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'ctr\n    Protocol                        2\n    BatchMode                       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'no\n    ForwardX11                      no\n    CheckHostIP                     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'yes\n    IdentityFile                    ~/.ssh/id_rsa\n    IdentityFile        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            ~/.ssh/id_ed25519\n    ForwardAgent                    no\n    KexAl' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'gorithms                   curve25519-sha256@libssh.org,diffie-hellman-group-exc' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'hange-sha256\n    VisualHostKey                   yes\n    AddressFamily        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '           any\n    ConnectTimeout                  30\n    HashKnownHosts      ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            yes\n    HostKeyAlgorithms               ssh-ed25519-cert-v01@openss' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'h.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa\n    PermitLocalCommand  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            no\n    GSSAPIAuthentication            no\n    PubkeyAuthentication' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf '            yes\n    StrictHostKeyChecking           ask\n    PasswordAuthentica' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'tion          no\n    HostbasedAuthentication         no\n    GSSAPIDelegateCred' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"
/usr/bin/printf 'entials       no\n    ChallengeResponseAuthentication yes\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/ssh_config"

# Create file "/etc/ssh/sshd_config"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'Port                            22\nMACs                            hmac-sha2-51' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '2-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sh' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'a2-512,hmac-sha2-256,umac-128@openssh.com\nUsePAM                          yes\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'Ciphers                         chacha20-poly1305@openssh.com,aes256-gcm@openssh' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr\nHostKey           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '              /etc/ssh/ssh_host_rsa_key\nHostKey                         /etc/ss' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'h/ssh_host_ed25519_key\nProtocol                        2\nSubsystem            ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '           sftp /usr/lib/ssh/sftp-server\nPrintMotd                       no\nPe' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'rmitTTY                       yes\nCompression                     no\nMaxStartu' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'ps                     10:30:100\nGatewayPorts                    no\nPermitTunn' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'el                    no\nPrintLastLog                    yes\nIgnoreRhosts     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '               yes\nTCPKeepAlive                    yes\nAddressFamily          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '         any\nListenAddress                   10.1.10.1\nKexAlgorithms          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '         curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256\nLogi' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'nGraceTime                  1m\nPermitRootLogin                 yes\nAllowTcpFor' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'warding              no\nAuthorizedKeysFile              .ssh/authorized_keys\nC' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'lientAliveCountMax             0\nClientAliveInterval             600\nIgnoreUse' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'rKnownHosts            no\nPermitEmptyPasswords            no\nAllowAgentForward' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf 'ing            no\nPubkeyAuthentication            yes\nPasswordAuthentication  ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf '        yes\nKerberosAuthentication          no\nHostbasedAuthentication        ' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"
/usr/bin/printf ' no\nChallengeResponseAuthentication no\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/ssh/sshd_config"

# Create file "/etc/syscheck.d/perms.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nchmod 555 /etc/ssh\nchmod 550 /etc/iptables\nchmod 440 /etc/i' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'ptables/*\nchmod 555 -R /etc/systemd\nchmod 550 -R /etc/security\nchmod 550 -R /' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'etc/pacman.d\nchmod 550 -R /etc/sysctl.d\nchmod 555 -R /etc/profile.d\nchmod 555' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf ' -R /etc/syscheck.d\n\nchown root:root -R /etc/systemd\nchown root:root -R /etc/' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'iptables\nchown root:root -R /etc/pacman.d\nchown root:root -R /etc/security\nch' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'own root:root -R /etc/sysctl.d\nchown root:root -R /etc/profile.d\nchown root:ro' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'ot -R /etc/syscheck.d\n\nfind /etc/ssh -type f -exec chmod 400 {} \\;\nfind /etc' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf '/systemd -type f -exec chmod 444 {} \\;\nfind /etc/pacman.d -type f -exec chmod ' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf '440 {} \\;\nfind /etc/sysctl.d -type f -exec chmod 440 {} \\;\nfind /etc/securit' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'y -type f -exec chmod 440 {} \\;\n\nchmod 444 /etc/motd\nchmod 444 /etc/hosts\nc' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'hmod 444 /etc/hostname\nchmod 444 /etc/locale.gen\nchmod 400 /etc/pacman.conf\nc' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'hmod 440 /etc/dnsmasq.conf\nchmod 444 /etc/nsswitch.conf\nchmod 400 /etc/vconsol' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'e.conf\nchmod 444 /etc/sysconfig.conf\nchmod 444 /etc/ssh/ssh_config\nchmod 400 ' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf '/etc/mkinitcpio.conf\n\nchown root:root /etc/motd\nchown root:root /etc/hosts\nc' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'hown root:root /etc/hostname\nchown root:root /etc/locale.gen\nchown root:root /' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'etc/pacman.conf\nchown root:root /etc/vconsole.conf\nchown root:root /etc/nsswit' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'ch.conf\nchown root:root /etc/sysconfig.conf\nchown root:dnsmasq /etc/dnsmasq.co' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"
/usr/bin/printf 'nf\nchown root:root /etc/mkinitcpio.conf\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/perms.sh"

# Create file "/etc/syscheck.d/cache.sh"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf '#!/usr/bin/bash\n\nrm "/etc/.updated" 2> /dev/null\nrm "/etc/.pwd.lock" 2> /dev/' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'null\nrm "/etc/ld.so.cache" 2> /dev/null\n\nif ! [ -e "/var/cache/ld.so.cache" ]' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf '; then\n    touch "/var/cache/ld.so.cache" 2> /dev/null\nfi\nln -s "/var/cache/l' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'd.so.cache" "/etc/ld.so.cache" 2> /dev/null\n\nchmod 0644 "/var/cache/ld.so.cach' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"
/usr/bin/printf 'e"\nchown root:root "/var/cache/ld.so.cache"\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/syscheck.d/cache.sh"

# Create file "/etc/sysctl.d/ipv6.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/ipv6.conf"
/usr/bin/printf 'net.ipv6.conf.all.disable_ipv6 = 1\nnet.ipv6.conf.usb0.disable_ipv6 = 1\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/ipv6.conf"

# Create file "/etc/sysctl.d/kernel.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'fs.file-max                     = 372925\nvm.swappiness                   = 10\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'fs.protected_fifos              = 1\nfs.protected_regular            = 1\nkernel' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf '.kptr_restrict            = 2\nkernel.dmesg_restrict           = 1\nfs.protected' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf '_symlinks           = 1\nfs.protected_hardlinks          = 1\nfs.inotify.max_use' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'r_watches     = 16777215\nfs.inotify.max_queued_events    = 32767\nvm.dirty_writ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"
/usr/bin/printf 'eback_centisecs    = 1500\nfs.inotify.max_user_instances   = 4096\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/kernel.conf"

# Create file "/etc/sysctl.d/network.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'net.core.rmem_max                           = 16777216\nnet.ipv4.tcp_rmem       ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                    = 4096 1048576 2097152\nnet.ipv4.tcp_wmem                   ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '        = 4096 65536 16777216\nnet.core.wmem_max                           = 167' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '77216\nnet.core.somaxconn                          = 32768\nnet.core.optmem_max ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                        = 65536\nnet.ipv4.tcp_rfc1337                        = 1' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '\nnet.ipv4.udp_rmem_min                       = 8192\nnet.ipv4.udp_wmem_min     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                  = 8192\nnet.core.rmem_default                       = 1048576\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'net.core.wmem_default                       = 1048576\nnet.ipv4.tcp_fastopen    ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                   = 1\nnet.ipv4.tcp_tw_reuse                       = 1\nnet.cor' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'e.netdev_budget                      = 50000\nnet.ipv4.tcp_timestamps           ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '          = 1\nnet.core.bpf_jit_harden                     = 2\nnet.ipv4.tcp_syn' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'cookies                     = 1\nnet.ipv4.tcp_low_latency                    = 1' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '\nnet.ipv4.tcp_fin_timeout                    = 10\nnet.core.netdev_max_backlog ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '                = 2000000\nnet.ipv4.tcp_max_tw_buckets                 = 2000000' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '\nnet.ipv4.conf.all.rp_filter                 = 2\nnet.core.netdev_budget_usecs ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '               = 5000\nnet.ipv4.tcp_max_syn_backlog                = 65535\nnet.' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'ipv4.ip_local_port_range                = 1025 65535\nnet.ipv4.conf.default.rp_f' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf 'ilter             = 2\nnet.ipv4.conf.all.send_redirects            = 0\nnet.ipv4' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '.conf.all.accept_redirects          = 0\nnet.ipv4.tcp_slow_start_after_idle     ' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '     = 0\nnet.ipv4.icmp_echo_ignore_broadcasts        = 1\nnet.ipv4.conf.default' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '.send_redirects        = 0\nnet.ipv4.conf.default.accept_redirects      = 0\nnet' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"
/usr/bin/printf '.ipv4.icmp_ignore_bogus_error_responses  = 1\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/sysctl.d/network.conf"

# Create file "/etc/systemd/network/usb0.network"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network/usb0.network"
/usr/bin/printf '[Match]\nType    = gadget\n\n[Network]\nDNS     = 10.1.10.2\nAddress = 10.1.10.1' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network/usb0.network"
/usr/bin/printf '/30\n\n[Route]\nGateway = 10.1.10.1\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/network/usb0.network"

# Create file "/etc/systemd/coredump.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/coredump.conf"
/usr/bin/printf '[Coredump]\nStorage = none\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/coredump.conf"

# Create file "/etc/systemd/journald.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf '[Journal]\nAudit               = on\nStorage             = volatile\nReadKMsg   ' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf '         = yes\nCompress            = yes\nSplitMode           = uid\nMaxFileSec' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf '          = 12h\nSystemMaxUse        = 64M\nMaxLevelStore       = info\nForwardT' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"
/usr/bin/printf 'oSyslog     = no\nMaxRetentionSec     = 12h\nSystemMaxFileSize   = 32M\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/journald.conf"

# Create file "/etc/systemd/resolved.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf '[Resolve]\nCache                       = yes\nLLMNR                       = no\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'DNSSEC                      = allow-downgrade\nDNSOverTLS                  = no\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'FallbackDNS                 = 127.0.0.1\nReadEtcHosts                = yes\nMult' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'icastDNS                = no\nDNSStubListener             = no\nResolveUnicastSi' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"
/usr/bin/printf 'ngleLabel   = no' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/resolved.conf"

# Create file "/etc/systemd/timesyncd.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/timesyncd.conf"
/usr/bin/printf '[Time]\nNTP                 = time.nist.gov host.usb\nRootDistanceMaxSec  = 30\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/timesyncd.conf"

# Create file "/etc/systemd/system/ldconfig.service.d/override.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/ldconfig.service.d/override.conf"
/usr/bin/printf '[Service]\nExecStart =\nExecStart =  /sbin/ldconfig -XC /var/cache/ld.so.cache\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/systemd/system/ldconfig.service.d/override.conf"

# Create file "/etc/hostname"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/hostname"
/usr/bin/printf 'beagle' >> "${ROOT}${SYSCONFIG_DIR}/etc/hostname"

# Create file "/etc/hosts"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/hosts"
/usr/bin/printf '::1         localhost.local     localhost\n127.0.0.1   localhost.local     local' >> "${ROOT}${SYSCONFIG_DIR}/etc/hosts"
/usr/bin/printf 'host\n10.1.10.1   beagle.usb          beagle\n10.1.10.1   beagle.usb          be' >> "${ROOT}${SYSCONFIG_DIR}/etc/hosts"
/usr/bin/printf 'agle\n10.1.10.2   host.usb            host\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/hosts"

# Create file "/etc/locale.gen"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/locale.gen"
/usr/bin/printf 'en_US.UTF-8 UTF-8\nen_US       ISO-8859-1\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/locale.gen"

# Create file "/etc/mkinitcpio.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"
/usr/bin/printf 'MODULES=()\nCOMPRESSION="zstd"\nCOMPRESSION_OPTIONS=(-9)\nBINARIES=(btrfs fsck.b' >> "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"
/usr/bin/printf 'trfs)\nFILES=(/usr/bin/btrfs /usr/bin/fsck.btrfs)\nHOOKS=(systemd autodetect mod' >> "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"
/usr/bin/printf 'conf block sd-vconsole btrfs filesystems fsck)\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/mkinitcpio.conf"

# Create file "/etc/motd"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/motd"

# Create file "/etc/nsswitch.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"
/usr/bin/printf 'passwd: files systemd\ngroup: files systemd\nshadow: files\n\npublickey: files\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"
/usr/bin/printf '\nhosts: files myhostname resolve dns\nnetworks: files\n\nprotocols: files\nserv' >> "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"
/usr/bin/printf 'ices: files\nethers: files\nrpc: files\n\nnetgroup: files\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/nsswitch.conf"

# Create file "/etc/pacman.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf '[options]\nDBPath              = /var/lib/pacman\nGPGDir              = /etc/pac' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'man.d/gnupg\nRootDir             = /\nHookDir             = /etc/pacman.d/hooks\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'LogFile             = /var/log/pacman.log\nHoldPkg             = pacman glibc\nC' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'acheDir            = /var/cache/pacman/pkg\nSigLevel            = Required Datab' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'aseOptional\nCleanMethod         = KeepInstalled\nArchitecture        = armv7h\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'LocalFileSigLevel   = Optional\n\nCheckSpace\nTotalDownload\nVerbosePkgLists\n\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf '[aur]\nInclude             = /etc/pacman.d/mirrorlist\n[core]\nInclude          ' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf '   = /etc/pacman.d/mirrorlist\n[extra]\nInclude             = /etc/pacman.d/mirr' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'orlist\n[alarm]\nInclude             = /etc/pacman.d/mirrorlist\n[community]\nIn' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"
/usr/bin/printf 'clude             = /etc/pacman.d/mirrorlist\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/pacman.conf"

# Create file "/etc/vconsole.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/vconsole.conf"
/usr/bin/printf 'KEYMAP=us\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/vconsole.conf"

# Create file "/etc/dnsmasq.conf"
/usr/bin/printf "" > "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'no-hosts\nbind-dynamic\nexpand-hosts\n\nport            = 53\nuser            = ' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'dnsmasq\ngroup           = dnsmasq\nlocal           = /usb/\ndomain          = u' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'sb,10.1.10.1/29\naddress         = /beagle.usb/10.1.10.1\naddress         = /bea' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'gle/10.1.10.1\ninterface       = usb0\ndhcp-range      = 10.1.10.2,10.1.10.2,255' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf '.255.255.252,1h\nresolv-file     = /etc/resolv.conf\ndhcp-option     = vendor:MS' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'FT,2,1i\ndhcp-option     = option:router,10.1.10.1\ndhcp-option     = option:dom' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf 'ain-search,usb\nlisten-address  = 10.1.10.1\ndhcp-lease-max  = 1\ndhcp-leasefile' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"
/usr/bin/printf '  = /dev/null\n' >> "${ROOT}${SYSCONFIG_DIR}/etc/dnsmasq.conf"

